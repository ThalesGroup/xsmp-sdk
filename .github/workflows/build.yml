name: Build

on:
   push:
      branches:
      - main
      tags:
      - '**'
   pull_request:
      branches:
      - main
permissions: read-all

concurrency:
   group: ${{ github.workflow }}-${{ github.ref }}
   cancel-in-progress: true
jobs:
   cmake:
      name: '${{matrix.os}} :: CMake ${{matrix.cmake_version}}'
      runs-on: ${{matrix.os}}
      strategy:
         fail-fast: false
         matrix:
            os:
            - ubuntu-latest
            cmake_version:
            - '3.14'
            - '3.24'
            - '3.25'
            - '3.26'
            - '3.27'
            - '3.28'
            - latest
      steps:
      -  uses: actions/checkout@v4
      -  name: Get CMake ${{matrix.cmake_version}} and Ninja
         uses: lukka/get-cmake@latest
         with:
            cmakeVersion: ${{matrix.cmake_version}}
      -  name: install  pytest
         run: |
            pip install pytest
      -  name: Configure cmake
         run: |
            cmake -B build -DCMAKE_BUILD_TYPE=Release -DXSMP_BUILD_EXAMPLES=ON -S .
      -  name: Build
         run: |
            cmake --build build --config Release -j 2
      -  name: Run tests
         run: |
            cd build && ctest -C Release --output-on-failure
   gcc:
      name: '${{matrix.os}} :: GCC ${{matrix.gcc}}'
      runs-on: ${{matrix.os}}
      container: gcc:${{matrix.gcc}}
      strategy:
         fail-fast: false
         matrix:
            os:
            - ubuntu-latest
            gcc:
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
      steps:
      -  uses: actions/checkout@v4
      -  name: Setup CMake
         uses: lukka/get-cmake@latest
      -  name: Add Git & Python3
         run: apt-get update; apt-get install -y git python3-dev python3-pytest
      -  name: Configure CMake
         run: |
            cmake -B build -DCMAKE_BUILD_TYPE=Release -DXSMP_BUILD_EXAMPLES=ON -S .
      -  name: Build
         run: |
            cmake --build build --config Release -j 2
      -  name: Run tests
         run: |
            cd build && ctest -C Release --output-on-failure
   clang:
      name: '${{matrix.os}} :: Clang ${{matrix.clang}}'
      runs-on: ${{matrix.os}}
      container: silkeh/clang:${{matrix.clang}}
      strategy:
         fail-fast: false
         matrix:
            os:
            - ubuntu-latest
            clang:
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
      steps:
      -  uses: actions/checkout@v4
      -  name: Setup CMake
         uses: lukka/get-cmake@latest
      -  name: Add Git & Python3
         run: apt-get update; apt-get install -y git python3-dev python3-pytest
      -  name: Configure CMake
         run: |
            cmake -B build -DCMAKE_BUILD_TYPE=Release -DXSMP_BUILD_EXAMPLES=ON -S .
      -  name: Build
         run: |
            cmake --build build --config Release -j 2
      -  name: Run tests
         run: |
            cd build && ctest -C Release --output-on-failure
   windows:
      name: '${{matrix.os}}'
      runs-on: ${{matrix.os}}
      strategy:
         fail-fast: false
         matrix:
            os:
            - windows-2019
            - windows-2022
            - windows-latest
      steps:
      -  uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
      -  name: install  pytest
         run: |
            python3 -m pip install pytest
      -  name: Configure cmake
         run: |
            cmake -B build -DCMAKE_BUILD_TYPE=Release -DXSMP_BUILD_EXAMPLES=ON -S .
      -  name: Build
         run: |
            cmake --build build --config Release -j 2
      -  name: Run tests
         run: |
            cd build && ctest -C Release --output-on-failure -E "XsmpScheduler"
   python:
      name: '${{matrix.os}} :: Python ${{matrix.python-version}}'
      runs-on: ${{matrix.os}}
      strategy:
         fail-fast: false
         matrix:
            os:
            - ubuntu-latest
            - macos-13
#            - windows-latest
            python-version:
            - '3.7'
            - '3.9'
            - '3.10'
            - '3.11'
            - '3.12'
            - '3.13'
      steps:
      -  uses: actions/checkout@v4
      -  uses: actions/setup-python@v5
         with:
            python-version: ${{matrix.python-version}}
            allow-prereleases: true
      -  name: Install Python bindings using pip
         run: |
            python -m pip install .[test] -v
      -  name: Run Python tests
         run: |
            python -m pytest python -v
